"""
Django settings for aec_election_history project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
from decouple import config, Csv


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = config(
    'BASE_DIR',
    os.path.join(os.path.dirname(os.path.dirname(__file__)), 'site')
)
STATIC_ROOT = config(
    'STATIC_DIR',
    default=os.path.join(BASE_DIR, "staticfiles")
)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'm&2nvb=cysmr7ph#0*_z$v=bdupdnzo(ig@+zg6i%!==_kt^dz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = list(filter(None,os.environ.get('ALLOWED_HOSTS', '').split(',')))
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


# Application definition
# CORS_ORIGIN_ALLOW_ALL = True
# CORS_URLS_REGEX = r'^/graphql.*$'
CORS_URLS_ALLOW_ALL_REGEX = (r'^/graphql.*$', )

INSTALLED_APPS = [
    'aec',
    'data_importer',

    'corsheaders',

    'graphene_django',
    
    'django_spaghetti',
    'data_interrogator',
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE_CLASSES = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

GRAPHENE = {
    'SCHEMA': 'aec.graphql.schema' # Where your Graphene schema lives
}

ROOT_URLCONF = 'aec_election_history.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'aec_election_history.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

import dj_database_url
DATABASE_URL = config('DATABASE_URL', "sqlite:///%s/db.db"%(BASE_DIR))
DATABASES = {'default': dj_database_url.parse(DATABASE_URL)}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'


DATA_INTERROGATION_DOSSIER = {
    'suspects': [
        {   "model":("aec","Person"),
            # "wrap_sheets": {
            #     "name": {
            #         "columns": ['phid','name', 'family_name'],#,'given_name'],
            #         "sort" : "family_name",
            #         "template": "parlhand/tables/custom/parliamentarian.html",
            #     },
            #     "length_of_service": {
            #         "columns": [], # none needed this is an alias
            #         "sort" : "length_of_service",
            #         "template": "parlhand/tables/custom/length_of_service.html",
            #     }
            # },
            # "aliases": {
            #     "length_of_service":{
            #             'filter':"service.chamber.level=Federal",
            #             'column':"sum(service.end_date - service.start_date)",
            #         },
            #     },
            # "alias": "Parliamentian",
        },
        {'model':("aec","Electorate")},
        {'model':("aec","Party"),
        },
        {'model':("aec","Election")},
    ],
    'witness_protection' : ["User","Revision","Version"],
    'suspect_grouping':True
}

SPAGHETTI_SAUCE = {
    'apps':['aec'], #['tests']
    'show_fields':False,
    'ignore_self_referential':True,
    'show_proxy':False,
    }